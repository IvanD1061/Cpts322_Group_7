ng new <name>
cd name
ng serve (starts a server)
will give you a port to join, open in chrome
delete content in app.component.html and replace with html code that you want to run it with

File Info:

index.html is the app's top level HTML template.
style.css is the app's top level style sheet.
main.ts is where the app starts running.
favicon.ico is the app's icon, just as you would find in any web site.

app.component.ts is the source file that describes the app-root component. This is the top-level Angular component in the app. A component is the basic building block of
     an Angular application. The component description includes the component's code, HTML template, and styles, which can be described in this file, or in separate files.

App Folder: In this app, the styles are in a separate file while the component's code and HTML template are in this file. app.component.css is the style sheet for this component.
New components are added to this directory.

In the file explorer, find the image directory (/assets) that contains images used by the app.
In the file explorer, find the files and directories that an Angular app needs to build and run, but they are not files that you normally interact with.
.angular has files required to build the Angular app.
.e2e has files used to test the app.
.node_modules has the node.js packages that the app uses.
angular.json describes the Angular app to the app building tools.
package.json is used by npm (the node package manager) to run the finished app.
tsconfig.* are the files that describe the app's configuration to the TypeScript compiler.

Other
.angular has files required to build the Angular app.
.e2e has files used to test the app.
.node_modules has the node.js packages that the app uses.
angular.json describes the Angular app to the app building tools.
package.json is used by npm (the node package manager) to run the finished app.
tsconfig.* are the files that describe the app's configuration to the TypeScript compiler.


<------------------------------------------------------->
ng generate component <name> creates a new component 
Getting the new component in the page: 
	 add import { NameComponent } from './name/name.component'; to app.component.ts file
	add NameComponent to imports list in app.component.ts file

	add <app-name></app-name> tags to app.component.html page

	the app component is like a container for all other components and the index.html file (main html file) has the app component info
